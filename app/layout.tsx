import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Providers from "@/lib/providers";
import { Toaster } from "@/components/ui/toaster";
import { Toaster as HotToaster } from "react-hot-toast";
import { Session } from "next-auth";
import { headers } from "next/dist/client/components/headers";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "App",
  description: "Generated by create next app",
};

async function getSession(cookie: string): Promise<Session | null> {
  try {
    const response = await fetch(`http://localhost:3333/api/auth/session`, {
      headers: {
        cookie,
      },
    });

    const session = await response.json();

    return session;
  } catch (e) {
    console.log(e);
    return null;
  }
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getSession(headers().get("cookie") ?? "");
  return (
    <html lang="en" className="scroll-smooth">
      <Providers session={session}>
        <body className={inter.className} suppressHydrationWarning={true}>
          {children}
          <Toaster />
          <HotToaster />
        </body>
      </Providers>
    </html>
  );
}
